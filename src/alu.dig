<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>romContent</string>
      <romList>
        <roms/>
      </romList>
    </entry>
    <entry>
      <string>Width</string>
      <int>8</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RESULT</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B RESULT

# Test small results
loop(a, 1 &lt;&lt; 4)
loop(b, 1 &lt;&lt; 4)
    (00) (a) (b) ((a + b) &amp; 0xFFFF)
    (01) (a) (b) ((a - b) &amp; 0xFFFF)
    (10) (a) (b) (a &amp; b)
    (11) (a) (b) (a ^ b)
end loop
end loop


# Test large results
loop(i, 1000)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    (00) (a) (b) ((a + b) &amp; 0xFFFF)
    (01) (a) (b) ((a - b) &amp; 0xFFFF)
    (10) (a) (b) (a &amp; b)
    (11) (a) (b) (a ^ b)
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="0" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Z</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B Z

declare Z = FLAG &amp; 0b1;

# Test all zero cases
00 0 0 1
01 0 0 1
10 0 0 1
11 0 0 1

# Test 1 + (-1) = 0
00 1 0xFFFF 1

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    00 (a) 0 (a = 0)
    01 (a) 0 (a = 0)
    10 (a) 0 1
    11 (a) 0 (a = 0)
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    00 (a) (b) (((a + b) &amp; 0xFFFF) = 0)
    01 (a) (b) (((a - b) &amp; 0xFFFF) = 0)
    10 (a) (b) ((a &amp; b) = 0)
    11 (a) (b) ((a ^ b) = 0)
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="0" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>N</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B N

declare N = (FLAG &gt;&gt; 1) &amp; 0b1;

# Test all zero cases
00 0 0 0
01 0 0 0
10 0 0 0
11 0 0 0

00 1 0xFFFF 0

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    00 (a) 0 ((a &gt;&gt; 15) &amp; 0b1)
    01 (a) 0 ((a &gt;&gt; 15) &amp; 0b1)
    10 (a) 0 0
    11 (a) 0 ((a &gt;&gt; 15) &amp; 0b1)
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    00 (a) (b) (((a + b) &gt;&gt; 15) &amp; 0b1)
    01 (a) (b) (((a - b) &gt;&gt; 15) &amp; 0b1)
    10 (a) (b) (((a &amp; b) &gt;&gt; 15) &amp; 0b1)
    11 (a) (b) (((a ^ b) &gt;&gt; 15) &amp; 0b1)
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="0" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>C</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B C

declare C = (FLAG &gt;&gt; 2) &amp; 0b1;

00 0 0 0

# (0 - 0) is implemented as 0 + (0xFFFF + 1), so a carry is expected
01 0 0 1

# Carry should propagate all the way from the first bit if necessary
00 1 0xFFFF 1

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    00 (a) 0 0
    01 (a) 0 1  # (a - 0) is implemented as (a + 0xFFFF + 1) in the adder, so a carry is always expected
    10 (a) 0 0  # carry is defined as 0 for AND
    11 (a) 0 0  # carry is defined as 0 for XOR
end loop

# Adding 15 bit values should never carry
loop(i, 100)
    00 (random(1 &lt;&lt; 15)) (random(1 &lt;&lt; 15)) 0
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    00 (a) (b) (((a + b) &gt;&gt; 16) &amp; 0b1)
    01 (a) (b) (~((a - b) &gt;&gt; 16) &amp; 0b1)
end loop

# AND and XOR never set carry
loop(i, 100)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);
    10 (a) (b) 0
    11 (a) (b) 0
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="0" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>V</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B V

declare V = (FLAG &gt;&gt; 3) &amp; 0b1;

00 0 0 0
01 0 0 0

# 1 + (-1) = 0  ; different input signs = no overflow here!
00 1 0xFFFF 0

# 3 - 5 = 3 + (-5) = -2  ; subtraction inverts the second operand sign
01 3 5 0

# Some edge cases when subtracting 0x8000
01 0x8000 0x8000 0
01 0xFFFF 0x8000 0
01 0x7FFF 0x8000 1

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    00 (a) 0 0
    01 (a) 0 0
    10 (a) 0 0  # overflow is defined as 0 for AND
    11 (a) 0 0  # overflow is defined as 0 for XOR
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    00 (a) (b) (((~(a ^ b) &amp; (a ^ (a + b))) &gt;&gt; 15) &amp; 0b1)
    01 (a) (b) (((~(a ^ -b) &amp; (a ^ (a - b))) &gt;&gt; 15) &amp; 0b1)
end loop

# AND and XOR never set overflow
loop(i, 100)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);
    10 (a) (b) 0
    11 (a) (b) 0
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="0" y="400"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Operation selection input</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
      </elementAttributes>
      <pos x="560" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>First input to ALU</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>A</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="200" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Second input to ALU</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>B</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="260" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The result of this ALU operation</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>RESULT</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="980" y="180"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The flags associated with the result of this ALU operation

0. Z (zero)
1. N (negative)
2. C (carry)
3. V (overflow)</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>FLAG</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
      </elementAttributes>
      <pos x="1420" y="740"/>
    </visualElement>
    <visualElement>
      <elementName>Add</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Add / Sub</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="460" y="180"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="340" y="180"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="280" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Selector Bits</string>
          <int>2</int>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>flipSelPos</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="760" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="460" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>XOr</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="460" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1</string>
        </entry>
      </elementAttributes>
      <pos x="920" y="600"/>
    </visualElement>
    <visualElement>
      <elementName>NOr</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Inputs</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="1100" y="580"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>1,1,1,1</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>4</string>
        </entry>
      </elementAttributes>
      <pos x="1380" y="740"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Selector Bits</string>
          <int>2</int>
        </entry>
        <entry>
          <string>flipSelPos</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="940" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="920" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="920" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>flipSelPos</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="660" y="1000"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>2</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1</string>
        </entry>
      </elementAttributes>
      <pos x="560" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="640" y="1040"/>
    </visualElement>
    <visualElement>
      <elementName>XOr</elementName>
      <elementAttributes/>
      <pos x="420" y="1020"/>
    </visualElement>
    <visualElement>
      <elementName>XNOr</elementName>
      <elementAttributes/>
      <pos x="420" y="920"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>15,1</string>
        </entry>
      </elementAttributes>
      <pos x="400" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>15,1</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="940"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>15,1</string>
        </entry>
      </elementAttributes>
      <pos x="360" y="1060"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes/>
      <pos x="580" y="980"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="200" y="320"/>
      <p2 x="460" y="320"/>
    </wire>
    <wire>
      <p1 x="920" y="320"/>
      <p2 x="940" y="320"/>
    </wire>
    <wire>
      <p1 x="1000" y="640"/>
      <p2 x="1100" y="640"/>
    </wire>
    <wire>
      <p1 x="940" y="640"/>
      <p2 x="980" y="640"/>
    </wire>
    <wire>
      <p1 x="360" y="960"/>
      <p2 x="380" y="960"/>
    </wire>
    <wire>
      <p1 x="380" y="960"/>
      <p2 x="420" y="960"/>
    </wire>
    <wire>
      <p1 x="360" y="260"/>
      <p2 x="440" y="260"/>
    </wire>
    <wire>
      <p1 x="660" y="260"/>
      <p2 x="920" y="260"/>
    </wire>
    <wire>
      <p1 x="440" y="260"/>
      <p2 x="560" y="260"/>
    </wire>
    <wire>
      <p1 x="920" y="260"/>
      <p2 x="940" y="260"/>
    </wire>
    <wire>
      <p1 x="940" y="900"/>
      <p2 x="1020" y="900"/>
    </wire>
    <wire>
      <p1 x="1020" y="900"/>
      <p2 x="1100" y="900"/>
    </wire>
    <wire>
      <p1 x="940" y="580"/>
      <p2 x="1100" y="580"/>
    </wire>
    <wire>
      <p1 x="380" y="200"/>
      <p2 x="400" y="200"/>
    </wire>
    <wire>
      <p1 x="740" y="200"/>
      <p2 x="760" y="200"/>
    </wire>
    <wire>
      <p1 x="520" y="200"/>
      <p2 x="660" y="200"/>
    </wire>
    <wire>
      <p1 x="400" y="200"/>
      <p2 x="460" y="200"/>
    </wire>
    <wire>
      <p1 x="940" y="840"/>
      <p2 x="1100" y="840"/>
    </wire>
    <wire>
      <p1 x="200" y="140"/>
      <p2 x="400" y="140"/>
    </wire>
    <wire>
      <p1 x="700" y="140"/>
      <p2 x="740" y="140"/>
    </wire>
    <wire>
      <p1 x="740" y="140"/>
      <p2 x="760" y="140"/>
    </wire>
    <wire>
      <p1 x="260" y="460"/>
      <p2 x="460" y="460"/>
    </wire>
    <wire>
      <p1 x="940" y="780"/>
      <p2 x="1100" y="780"/>
    </wire>
    <wire>
      <p1 x="1340" y="780"/>
      <p2 x="1380" y="780"/>
    </wire>
    <wire>
      <p1 x="1080" y="720"/>
      <p2 x="1100" y="720"/>
    </wire>
    <wire>
      <p1 x="940" y="720"/>
      <p2 x="1060" y="720"/>
    </wire>
    <wire>
      <p1 x="640" y="1040"/>
      <p2 x="660" y="1040"/>
    </wire>
    <wire>
      <p1 x="360" y="1040"/>
      <p2 x="400" y="1040"/>
    </wire>
    <wire>
      <p1 x="480" y="1040"/>
      <p2 x="560" y="1040"/>
    </wire>
    <wire>
      <p1 x="520" y="340"/>
      <p2 x="720" y="340"/>
    </wire>
    <wire>
      <p1 x="1020" y="660"/>
      <p2 x="1100" y="660"/>
    </wire>
    <wire>
      <p1 x="940" y="660"/>
      <p2 x="1000" y="660"/>
    </wire>
    <wire>
      <p1 x="560" y="980"/>
      <p2 x="580" y="980"/>
    </wire>
    <wire>
      <p1 x="880" y="600"/>
      <p2 x="920" y="600"/>
    </wire>
    <wire>
      <p1 x="960" y="600"/>
      <p2 x="1100" y="600"/>
    </wire>
    <wire>
      <p1 x="1020" y="920"/>
      <p2 x="1220" y="920"/>
    </wire>
    <wire>
      <p1 x="380" y="920"/>
      <p2 x="420" y="920"/>
    </wire>
    <wire>
      <p1 x="920" y="280"/>
      <p2 x="940" y="280"/>
    </wire>
    <wire>
      <p1 x="440" y="220"/>
      <p2 x="460" y="220"/>
    </wire>
    <wire>
      <p1 x="320" y="220"/>
      <p2 x="340" y="220"/>
    </wire>
    <wire>
      <p1 x="260" y="220"/>
      <p2 x="280" y="220"/>
    </wire>
    <wire>
      <p1 x="940" y="860"/>
      <p2 x="1100" y="860"/>
    </wire>
    <wire>
      <p1 x="740" y="160"/>
      <p2 x="760" y="160"/>
    </wire>
    <wire>
      <p1 x="940" y="800"/>
      <p2 x="1100" y="800"/>
    </wire>
    <wire>
      <p1 x="1340" y="800"/>
      <p2 x="1380" y="800"/>
    </wire>
    <wire>
      <p1 x="1400" y="740"/>
      <p2 x="1420" y="740"/>
    </wire>
    <wire>
      <p1 x="940" y="740"/>
      <p2 x="1080" y="740"/>
    </wire>
    <wire>
      <p1 x="1200" y="740"/>
      <p2 x="1380" y="740"/>
    </wire>
    <wire>
      <p1 x="200" y="420"/>
      <p2 x="460" y="420"/>
    </wire>
    <wire>
      <p1 x="400" y="1060"/>
      <p2 x="420" y="1060"/>
    </wire>
    <wire>
      <p1 x="1040" y="680"/>
      <p2 x="1100" y="680"/>
    </wire>
    <wire>
      <p1 x="940" y="680"/>
      <p2 x="1020" y="680"/>
    </wire>
    <wire>
      <p1 x="560" y="40"/>
      <p2 x="780" y="40"/>
    </wire>
    <wire>
      <p1 x="780" y="40"/>
      <p2 x="960" y="40"/>
    </wire>
    <wire>
      <p1 x="260" y="360"/>
      <p2 x="460" y="360"/>
    </wire>
    <wire>
      <p1 x="640" y="1000"/>
      <p2 x="660" y="1000"/>
    </wire>
    <wire>
      <p1 x="200" y="940"/>
      <p2 x="340" y="940"/>
    </wire>
    <wire>
      <p1 x="500" y="940"/>
      <p2 x="560" y="940"/>
    </wire>
    <wire>
      <p1 x="980" y="620"/>
      <p2 x="1100" y="620"/>
    </wire>
    <wire>
      <p1 x="940" y="620"/>
      <p2 x="960" y="620"/>
    </wire>
    <wire>
      <p1 x="980" y="300"/>
      <p2 x="1340" y="300"/>
    </wire>
    <wire>
      <p1 x="920" y="300"/>
      <p2 x="940" y="300"/>
    </wire>
    <wire>
      <p1 x="940" y="880"/>
      <p2 x="1100" y="880"/>
    </wire>
    <wire>
      <p1 x="400" y="880"/>
      <p2 x="820" y="880"/>
    </wire>
    <wire>
      <p1 x="400" y="180"/>
      <p2 x="460" y="180"/>
    </wire>
    <wire>
      <p1 x="260" y="180"/>
      <p2 x="340" y="180"/>
    </wire>
    <wire>
      <p1 x="800" y="180"/>
      <p2 x="820" y="180"/>
    </wire>
    <wire>
      <p1 x="520" y="180"/>
      <p2 x="700" y="180"/>
    </wire>
    <wire>
      <p1 x="720" y="180"/>
      <p2 x="760" y="180"/>
    </wire>
    <wire>
      <p1 x="820" y="180"/>
      <p2 x="880" y="180"/>
    </wire>
    <wire>
      <p1 x="880" y="180"/>
      <p2 x="980" y="180"/>
    </wire>
    <wire>
      <p1 x="940" y="820"/>
      <p2 x="1100" y="820"/>
    </wire>
    <wire>
      <p1 x="520" y="440"/>
      <p2 x="740" y="440"/>
    </wire>
    <wire>
      <p1 x="940" y="760"/>
      <p2 x="1100" y="760"/>
    </wire>
    <wire>
      <p1 x="1220" y="760"/>
      <p2 x="1380" y="760"/>
    </wire>
    <wire>
      <p1 x="540" y="120"/>
      <p2 x="680" y="120"/>
    </wire>
    <wire>
      <p1 x="380" y="1080"/>
      <p2 x="400" y="1080"/>
    </wire>
    <wire>
      <p1 x="380" y="1020"/>
      <p2 x="420" y="1020"/>
    </wire>
    <wire>
      <p1 x="560" y="1020"/>
      <p2 x="580" y="1020"/>
    </wire>
    <wire>
      <p1 x="700" y="1020"/>
      <p2 x="1340" y="1020"/>
    </wire>
    <wire>
      <p1 x="1060" y="700"/>
      <p2 x="1100" y="700"/>
    </wire>
    <wire>
      <p1 x="940" y="700"/>
      <p2 x="1040" y="700"/>
    </wire>
    <wire>
      <p1 x="960" y="600"/>
      <p2 x="960" y="620"/>
    </wire>
    <wire>
      <p1 x="960" y="40"/>
      <p2 x="960" y="260"/>
    </wire>
    <wire>
      <p1 x="260" y="20"/>
      <p2 x="260" y="180"/>
    </wire>
    <wire>
      <p1 x="260" y="180"/>
      <p2 x="260" y="220"/>
    </wire>
    <wire>
      <p1 x="260" y="220"/>
      <p2 x="260" y="360"/>
    </wire>
    <wire>
      <p1 x="260" y="360"/>
      <p2 x="260" y="460"/>
    </wire>
    <wire>
      <p1 x="1220" y="760"/>
      <p2 x="1220" y="920"/>
    </wire>
    <wire>
      <p1 x="200" y="20"/>
      <p2 x="200" y="140"/>
    </wire>
    <wire>
      <p1 x="200" y="320"/>
      <p2 x="200" y="420"/>
    </wire>
    <wire>
      <p1 x="200" y="140"/>
      <p2 x="200" y="320"/>
    </wire>
    <wire>
      <p1 x="200" y="420"/>
      <p2 x="200" y="940"/>
    </wire>
    <wire>
      <p1 x="780" y="40"/>
      <p2 x="780" y="140"/>
    </wire>
    <wire>
      <p1 x="400" y="140"/>
      <p2 x="400" y="180"/>
    </wire>
    <wire>
      <p1 x="400" y="200"/>
      <p2 x="400" y="700"/>
    </wire>
    <wire>
      <p1 x="400" y="880"/>
      <p2 x="400" y="1040"/>
    </wire>
    <wire>
      <p1 x="400" y="1060"/>
      <p2 x="400" y="1080"/>
    </wire>
    <wire>
      <p1 x="720" y="180"/>
      <p2 x="720" y="340"/>
    </wire>
    <wire>
      <p1 x="1040" y="680"/>
      <p2 x="1040" y="700"/>
    </wire>
    <wire>
      <p1 x="980" y="620"/>
      <p2 x="980" y="640"/>
    </wire>
    <wire>
      <p1 x="660" y="200"/>
      <p2 x="660" y="260"/>
    </wire>
    <wire>
      <p1 x="920" y="260"/>
      <p2 x="920" y="280"/>
    </wire>
    <wire>
      <p1 x="540" y="100"/>
      <p2 x="540" y="120"/>
    </wire>
    <wire>
      <p1 x="740" y="140"/>
      <p2 x="740" y="160"/>
    </wire>
    <wire>
      <p1 x="740" y="200"/>
      <p2 x="740" y="440"/>
    </wire>
    <wire>
      <p1 x="1060" y="700"/>
      <p2 x="1060" y="720"/>
    </wire>
    <wire>
      <p1 x="360" y="220"/>
      <p2 x="360" y="260"/>
    </wire>
    <wire>
      <p1 x="360" y="1040"/>
      <p2 x="360" y="1060"/>
    </wire>
    <wire>
      <p1 x="1000" y="640"/>
      <p2 x="1000" y="660"/>
    </wire>
    <wire>
      <p1 x="680" y="120"/>
      <p2 x="680" y="1000"/>
    </wire>
    <wire>
      <p1 x="940" y="580"/>
      <p2 x="940" y="600"/>
    </wire>
    <wire>
      <p1 x="560" y="20"/>
      <p2 x="560" y="40"/>
    </wire>
    <wire>
      <p1 x="560" y="100"/>
      <p2 x="560" y="260"/>
    </wire>
    <wire>
      <p1 x="560" y="940"/>
      <p2 x="560" y="980"/>
    </wire>
    <wire>
      <p1 x="560" y="1020"/>
      <p2 x="560" y="1040"/>
    </wire>
    <wire>
      <p1 x="560" y="40"/>
      <p2 x="560" y="80"/>
    </wire>
    <wire>
      <p1 x="880" y="180"/>
      <p2 x="880" y="600"/>
    </wire>
    <wire>
      <p1 x="820" y="180"/>
      <p2 x="820" y="880"/>
    </wire>
    <wire>
      <p1 x="440" y="220"/>
      <p2 x="440" y="260"/>
    </wire>
    <wire>
      <p1 x="1080" y="720"/>
      <p2 x="1080" y="740"/>
    </wire>
    <wire>
      <p1 x="700" y="140"/>
      <p2 x="700" y="180"/>
    </wire>
    <wire>
      <p1 x="1020" y="660"/>
      <p2 x="1020" y="680"/>
    </wire>
    <wire>
      <p1 x="1020" y="900"/>
      <p2 x="1020" y="920"/>
    </wire>
    <wire>
      <p1 x="1340" y="300"/>
      <p2 x="1340" y="780"/>
    </wire>
    <wire>
      <p1 x="1340" y="800"/>
      <p2 x="1340" y="1020"/>
    </wire>
    <wire>
      <p1 x="380" y="720"/>
      <p2 x="380" y="920"/>
    </wire>
    <wire>
      <p1 x="380" y="960"/>
      <p2 x="380" y="1020"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>